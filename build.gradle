plugins {
    id 'java'
    id 'maven-publish'
    id 'jacoco'
    id 'checkstyle'
    id 'org.sonarqube' version '2.7.1'
    id 'net.researchgate.release' version '2.8.0'
}

group = 'com.carepay'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    checkstyleConfig
    testImplementation.extendsFrom compileOnly
}

repositories {
    mavenCentral()
    maven {
        url 's3://cp-maven-repo/releases'
        authentication {
            awsIm(AwsImAuthentication)
        }
    }
}

dependencies {
    implementation 'de.dentrassi.crypto:pem-keystore:2.1.0'
    implementation 'com.amazonaws:aws-java-sdk-core:1.11.641'
    implementation 'com.amazonaws:aws-java-sdk-rds:1.11.641'
    implementation 'org.apache.commons:commons-lang3:3.9'

    compileOnly 'com.zaxxer:HikariCP:3.2.0'
    compileOnly 'org.apache.tomcat:tomcat-jdbc:9.0.21'

    testImplementation 'com.h2database:h2:1.4.199'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.13.2'
    testImplementation 'org.mockito:mockito-core:2.28.2'

    checkstyleConfig 'ke.co.carepay:checkstyle:1.0@xml'
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
    repositories {
        maven {
            url 's3://cp-maven-repo/releases'
            authentication {
                awsIm(AwsImAuthentication)
            }
        }
    }
}

sonarqube {
    properties {
        property 'sonar.host.url', 'https://sonarcloud.io'
        property 'sonar.login', System.env.SONAR_TOKEN
        property 'sonar.organization', 'carepay-bitbucket'
        if (System.env.BITBUCKET_BRANCH != 'master') {
            property 'sonar.branch.name', System.env.BITBUCKET_BRANCH
            property 'sonar.branch.target', 'master'
        }
    }
}

checkstyle {
    configFile configurations.checkstyleConfig.files.first()
}


release {
    tagCommitMessage = 'Release tag [skip ci]'
    newVersionCommitMessage = 'New version [skip ci]'
}

afterReleaseBuild.dependsOn publish
